trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: gitversion/setup@0
  displayName: 'Install GitVersion'
  inputs:
    versionSpec: '5.3.7'

- task: gitversion/execute@0
  displayName: 'Run GitVersion'
  inputs:
    useConfigFile: true
    configFilePath: 'GitVersion.yml'
    additionalArguments: '/updateprojectfiles'
  
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
  
- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage"'
    publishTestResults: true
    projects: '**/*Tests/*.csproj'

- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage report
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
    
- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    nobuild: true
    versioningScheme: 'off'
    buildProperties: 'PackageVersion=$(Build.BuildNumber)'
    
- task: NuGetAuthenticate@0
  displayName: NuGet Authenticate
  inputs:
    nuGetServiceConnections: dujushi NuGet
 
- task: NuGetCommand@2
  displayName: NuGet push
  inputs:
    command: push
    nuGetFeedType: external
    versioningScheme: byEnvVar
    versionEnvVar: Build.BuildNumber